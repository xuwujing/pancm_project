<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zans.portal.dao.NetworkSwitcherScanDayDao">

    <resultMap type="com.zans.portal.model.NetworkSwitcherScanDay" id="NetworkSwitcherScanDayMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="swIp" column="sw_ip" jdbcType="VARCHAR"/>
        <result property="yyyymmdd" column="yyyymmdd" jdbcType="INTEGER"/>
        <result property="offlineDuration" column="offline_duration" jdbcType="INTEGER"/>
        <result property="afflineDuration" column="affline_duration" jdbcType="INTEGER"/>
        <result property="aliveDuration" column="alive_duration" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="NetworkSwitcherScanDayMap">
        select id,
               sw_ip,
               yyyymmdd,
               offline_duration,
               affline_duration,
               alive_duration,
               create_time,
               update_time
        from network_switcher_scan_day
        where id = #{id}
    </select>


    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="NetworkSwitcherScanDayMap">
        select
        id, sw_ip, yyyymmdd,  offline_duration, affline_duration, alive_duration, create_time,
        update_time
        from network_switcher_scan_day
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="swIp != null and swIp != ''">
                and sw_ip = #{swIp}
            </if>
            <if test="yyyymmdd != null">
                and yyyymmdd = #{yyyymmdd}
            </if>
            <if test="offlineDuration != null">
                and offline_duration = #{offlineDuration}
            </if>
            <if test="afflineDuration != null">
                and affline_duration = #{afflineDuration}
            </if>
            <if test="aliveDuration != null">
                and alive_duration = #{aliveDuration}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>
    <select id="queryLast" resultType="com.zans.portal.model.NetworkSwitcherScanDay">
        select
          DISTINCT yyyymmdd
        from network_switcher_scan_day order by yyyymmdd desc limit 1
    </select>
    <select id="queryByIpAndDate" resultType="com.zans.portal.model.NetworkSwitcherScanDay">
        select * from network_switcher_scan_day where sw_ip=#{swIp} and yyyymmdd=#{yyyymmdd}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into network_switcher_scan_day(sw_ip, yyyymmdd,  offline_duration, affline_duration,
                                              alive_duration, create_time, update_time)
        values (#{swIp}, #{yyyymmdd}, #{offlineDuration}, #{afflineDuration}, #{aliveDuration},
                #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into network_switcher_scan_day(sw_ip, yyyymmdd,  offline_duration, affline_duration,
        alive_duration, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.swIp}, #{entity.yyyymmdd}, #{entity.offlineDuration},
            #{entity.afflineDuration}, #{entity.aliveDuration}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into network_switcher_scan_day(sw_ip, yyyymmdd, offline_duration, affline_duration,
        alive_duration)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.swIp}, #{entity.yyyymmdd},  #{entity.offlineDuration},
            #{entity.afflineDuration}, #{entity.aliveDuration})
        </foreach>
        on duplicate key update
        offline_duration = values(offline_duration) , affline_duration = values(affline_duration) , alive_duration =
        values(alive_duration)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update network_switcher_scan_day
        <set>
            <if test="swIp != null and swIp != ''">
                sw_ip = #{swIp},
            </if>
            <if test="yyyymmdd != null">
                yyyymmdd = #{yyyymmdd},
            </if>
            <if test="offlineDuration != null">
                offline_duration = #{offlineDuration},
            </if>
            <if test="afflineDuration != null">
                affline_duration = #{afflineDuration},
            </if>
            <if test="aliveDuration != null">
                alive_duration = #{aliveDuration},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from network_switcher_scan_day
        where id = #{id}
    </delete>

</mapper>

